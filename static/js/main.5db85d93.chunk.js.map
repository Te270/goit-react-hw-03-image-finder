{"version":3,"sources":["components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","services/imagesApi.js","components/Loader/Loader.js","components/Modal/Modal.js","App.js","index.js"],"names":["Searchbar","state","query","handleChange","e","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","props","onSubmit","className","this","type","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","id","webformatURL","largeImageURL","tags","src","alt","ImageGallery","images","onClick","map","Button","axios","defaults","baseURL","fetchData","a","searchQuery","currentPage","get","response","data","hits","Spinner","color","height","width","modalRoot","document","querySelector","Modal","handleKeydown","code","onClose","handleBackdropClick","target","window","addEventListener","removeEventListener","createPortal","children","App","isLoaded","error","showModal","LargeUrl","tag","onChangeQuery","fetchImages","options","imagesApi","then","prevState","catch","finally","toggleModal","onImageClick","console","log","nodeName","largeUrl","dataset","url","prevProps","length","scrollTo","top","documentElement","scrollHeight","behavior","shouldRenderMoreButton","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5db85d93.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Searchbar.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class Searchbar extends Component {\r\n  state = {\r\n    query: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({ query: e.currentTarget.value.toLowerCase() });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSubmit(this.state.query);\r\n    this.setState({ query: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            value={this.state.query}\r\n            onChange={this.handleChange}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import './ImageGalleryItem.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImageGalleryItem = ({ id, webformatURL, largeImageURL, tags }) => (\r\n  <li key={id} className=\"ImageGalleryItem\">\r\n    <img\r\n      src={webformatURL}\r\n      alt={tags}\r\n      data-url={largeImageURL}\r\n      className=\"ImageGalleryItem-image\"\r\n    />\r\n  </li>\r\n);\r\n\r\nImageGalleryItem.propTypes = {\r\n  webformatURL: PropTypes.string.isRequired,\r\n  largeImageURL: PropTypes.string.isRequired,\r\n  tags: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import './ImageGallery.css';\r\nimport ImageGalleryItem from '../ImageGalleryItem';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImageGallery = ({ images, onClick }) => (\r\n  <ul className=\"ImageGallery\" onClick={onClick}>\r\n    {images.map(({ id, webformatURL, largeImageURL, tags }) => (\r\n      <ImageGalleryItem\r\n        key={id}\r\n        webformatURL={webformatURL}\r\n        largeImageURL={largeImageURL}\r\n        tags={tags}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.arrayOf(PropTypes.shape).isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGallery;\r\n","import './Button.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Button = ({ onClick }) => (\r\n  <button className=\"Button\" onClick={onClick}>\r\n    Load more\r\n  </button>\r\n);\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import axios from 'axios';\r\n\r\nconst apiKey = '24374609-133688d7da004cfa06346cc34';\r\n\r\naxios.defaults.baseURL = 'https://pixabay.com/api/';\r\n\r\nconst fetchData = async ({ searchQuery = '', currentPage = 1 }) => {\r\n  const response = await axios.get(\r\n    `/?q=${searchQuery}&page=${currentPage}&key=${apiKey}&image_type=photo&orientation=horizontal&per_page=12`,\r\n  );\r\n  return response.data.hits;\r\n};\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { fetchData };\r\n","import React from 'react';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nimport './Loader.css';\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className={Spinner}>\r\n      <Loader type=\"Hearts\" color=\"#00BFFF\" height={200} width={200} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport './Modal.css';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport default class Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeydown);\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeydown);\r\n  }\r\n\r\n  handleKeydown = e => {\r\n    if (e.code === 'Escape') {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleBackdropClick = e => {\r\n    if (e.target === e.currentTarget) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return createPortal(\r\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\r\n        <div className=\"Modal\">{this.props.children}</div>\r\n      </div>,\r\n      modalRoot,\r\n    );\r\n  }\r\n}\r\n\r\nModal.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n","import { Component } from 'react';\nimport './App.css';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport Button from './components/Button';\nimport imagesApi from './services/imagesApi';\nimport Spinner from './components/Loader/Loader';\nimport Modal from './components/Modal';\n\nclass App extends Component {\n  state = {\n    images: [],\n    currentPage: 1,\n    searchQuery: '',\n    isLoaded: false,\n    error: null,\n    showModal: false,\n    LargeUrl: '',\n    tag: '',\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const { searchQuery, images } = this.state;\n\n    if (prevState.searchQuery !== searchQuery) {\n      this.fetchImages();\n    }\n\n    if (images.length > 12) {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: 'smooth',\n      });\n    }\n  }\n\n  onChangeQuery = query => {\n    this.setState({\n      searchQuery: query,\n      images: [],\n      currentPage: 1,\n      error: null,\n    });\n  };\n\n  fetchImages = () => {\n    const { currentPage, searchQuery } = this.state;\n    const options = {\n      searchQuery,\n      currentPage,\n    };\n\n    this.setState({\n      isLoaded: true,\n    });\n\n    imagesApi\n      .fetchData(options)\n      .then(hits =>\n        this.setState(prevState => ({\n          images: [...prevState.images, ...hits],\n          currentPage: prevState.currentPage + 1,\n        })),\n      )\n      .catch(error => this.setState({ error }))\n      .finally(() => this.setState({ isLoaded: false }));\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    }));\n  };\n\n  onImageClick = e => {\n    console.log('Кликнули по картинке');\n    if (e.target.nodeName !== 'IMG') {\n      return;\n    }\n\n    this.setState(\n      {\n        largeUrl: e.target.dataset.url,\n        tags: e.target.alt,\n      },\n      () => console.log(this.state.tags),\n    );\n\n    this.toggleModal();\n  };\n\n  render() {\n    const { isLoaded, images, showModal, largeUrl, tag } = this.state;\n\n    const shouldRenderMoreButton = images.length > 0 && !isLoaded;\n\n    return (\n      <div className=\"container\">\n        <Searchbar onSubmit={this.onChangeQuery} />\n\n        <ImageGallery images={images} onClick={this.onImageClick} />\n\n        {isLoaded && <Spinner />}\n\n        {shouldRenderMoreButton && <Button onClick={this.fetchImages} />}\n\n        {showModal && (\n          <Modal onClose={this.toggleModal}>\n            <img src={largeUrl} alt={tag} />\n          </Modal>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}